<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jun.biz.manager.dao.AdminRoleDao">

    <resultMap id="BaseResultMap" type="com.jun.biz.manager.model.AdminRole">
        <id column="id" property="id"/>
        <result property="adminId" column="admin_id"/>
        <result property="roleId" column="role_id"/>
    </resultMap>

    <sql id="BaseColumnList">
        id,admin_id,role_id
    </sql>

    <delete id="deleteByAdmin">
        delete
        from s_admin_role
        where admin_id = #{adminId}
    </delete>

    <select id="selectRoleByAdmin" resultType="com.jun.biz.manager.model.AdminRole">
        select ar.admin_id , ar.role_id ,r.name role_name from s_admin_role ar join s_role r
        on ar.role_id = r.id
        where ar.admin_id in
        <foreach item="adminId" index="index" collection="adminIds" open="(" separator="," close=")">
            #{adminId}
        </foreach>
    </select>
    <!--<insert id="insert" useGeneratedKeys="true" keyProperty="id">
            insert into
                s_admin_role
            <trim prefix="(" suffix=")" suffixOverrides="," >
                         <if test="adminId != null">
                            admin_id ,
                      </if>
                         <if test="roleId != null">
                            role_id ,
                      </if>
            </trim>
            <trim prefix="values (" suffix=")" suffixOverrides="," >
                             <if test="adminId != null">
                                #{adminId} ,
                          </if>
                             <if test="roleId != null">
                                #{roleId} ,
                          </if>
           </trim>
    </insert>




     <select id="selectById" resultMap="BaseResultMap" parameterType="long">
            select
                 <include refid="BaseColumnList" />
            from
                s_admin_role
             where
                s_admin_role.id = #{id}
    </select>


    <update id="update"   >
            update s_admin_role
    <set>
            <if test="adminId != null">
                admin_id = #{adminId},
              </if><if test="roleId != null">
                role_id = #{roleId},
              </if>
    </set>
    where id = #{id}
   </update>


    <sql id="listWhere">
                       <if test="id != null">
                            and s_admin_role.id = #{id}
                        </if>
                       <if test="adminId != null">
                            and s_admin_role.admin_id = #{adminId}
                        </if>
                       <if test="roleId != null">
                            and s_admin_role.role_id = #{roleId}
                        </if>
   </sql>

    <select id="count" resultType="long">
           select
               count(*)
           from
               s_admin_role
           <where>
               <include refid="listWhere"/>
           </where>
   </select>


    <select id="selectList" resultMap="BaseResultMap" >
           select
                <include refid="BaseColumnList"/>
           from
               s_admin_role
           <where>
               <include refid="listWhere"/>
           </where>
           <if test="orderBy != null ">
               order by ${orderBy}
               <if test="sort != null ">
                   ${ sort}
               </if>
           </if>
           <if test="beginIndex != null and resultSize != null">
            limit #{beginIndex} , #{resultSize}
        </if>
   </select>


    <delete id="deleteById" parameterType="long" >
        delete from s_admin_role
        where id = #{id}
  </delete>
  -->


</mapper>

